package application.controller;
import application.model.Person;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.*;
import javafx.scene.control.cell.PropertyValueFactory;
import java.net.URL;
import java.util.ResourceBundle;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

public class Controller implements Initializable {
    @FXML
    private TableView<Person> tableView;
    @FXML
    private TableColumn<Person, String> firstNameColumn;
    @FXML
    private TableColumn<Person, String> lastNameColumn;
    @FXML
    private TableColumn<Person, String> emailColumn;
    @FXML
    private TextField firstNameTF;
    @FXML
    private TextField lastNameTF;
    @FXML
    private TextField emailTF;
    @FXML
    private Button addButton;

    //create initial data
    final ObservableList<Person> data = FXCollections.observableArrayList(
            new Person("Ethan", "Williams", "ethan.williams@example.com"),
            new Person("Michael", "Brown", "michael.brown@example.com")
    );

    public void initialize(URL location, ResourceBundle resources){
        firstNameColumn.setCellValueFactory(new PropertyValueFactory<Person, String>("firstName"));
        lastNameColumn.setCellValueFactory(new PropertyValueFactory<Person, String>("lastName"));
        emailColumn.setCellValueFactory(new PropertyValueFactory<Person, String>("email"));
        tableView.setItems(data);
        tableView.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);
    }

    // Event Listener on Button[#addButton].onAction
    @FXML
    public void addButtonAction(ActionEvent event) {
        // TODO Autogenerated
        data.add(new Person(
                firstNameTF.getText(),
                lastNameTF.getText(),
                emailTF.getText()
        ));
        firstNameTF.clear();
        lastNameTF.clear();
        emailTF.clear();
        tableView.setItems(data);
    }

    @FXML
    public void editButtonAction() {
        String firstName, lastName, email;
        if((firstName = firstNameTF.getText()).equals("") ||
                (lastName = lastNameTF.getText()).equals("") ||
                (email = emailTF.getText()).equals("")) {
            Alert alert = new Alert(Alert.AlertType.WARNING);
            alert.setTitle("Warning");
            alert.setHeaderText("Fields are empty!");
            alert.setContentText("Please fill in the required fields for successful edit");
            alert.showAndWait();
            return;
        }
        try {
            data.set(tableView.getSelectionModel().getSelectedIndex(), new Person(firstName, lastName, email));
            firstNameTF.clear();
            lastNameTF.clear();
            emailTF.clear();
            tableView.setItems(data);
        } catch (IndexOutOfBoundsException ex) {
            Alert alert = new Alert(Alert.AlertType.ERROR);
            alert.setTitle("Error");
            alert.setHeaderText("No row selected!");
            alert.setContentText("Please select a row before you attempt to edit");
            alert.showAndWait();
            return;
        }
    }

    @FXML
    public void delButtonAction() {
        try {
        data.remove(tableView.getSelectionModel().getSelectedIndex());
        firstNameTF.clear();
        lastNameTF.clear();
        emailTF.clear();
        tableView.setItems(data);
        } catch (IndexOutOfBoundsException ex) {
            Alert alert = new Alert(Alert.AlertType.ERROR);
            alert.setTitle("Error");
            alert.setHeaderText("No row selected!");
            alert.setContentText("Please select a row before you attempt to delete");
            alert.showAndWait();
            return;
        }
    }

}